crypto-keypath = {
    components: [0*10 path-component],
    ? source-fingerprint: uint32 .gt 0,
    ? depth: uint8
}

path-component = (
    child-index,
    is-hardened
)

uint8 = uint .size 1
uint32 = uint .size 4
uint31 = uint32 .lt 2147483648
child-index = uint31
is-hardened = bool
components = 1
source-fingerprint = 2
depth = 3

hd-key = {
    key-data: key-data-bytes,
    ? chain-code: chain-code-bytes,
    ? origin: #6.304(crypto-keypath),
    ? name: text,
    ? source: text
}

key-data = 3
chain-code = 4
origin = 6
name = 9
source = 10

key-data-bytes = bstr .size 33
chain-code-bytes = bstr .size 32

sign-data-type = eth-transaction-data / eth-typed-data / eth-raw-bytes / eth-typed-transaction

eth-transaction-data = 1
eth-typed-data = 2
eth-raw-bytes = 3
eth-typed-transaction = 4

eth-sign-request = {
    ? request-id: uuid,
    sign-data: sign-data-bytes,
    data-type: sign-data-type,
    ? chain-id: int,
    derivation-path: #6.304(crypto-keypath),
    ? address: eth-address-bytes,
    ? request-origin: text
}

request-id = 1
sign-data = 2
data-type = 3
chain-id = 4
derivation-path = 5
address = 6
request-origin = 7
eth-address-bytes = bstr .size 20
sign-data-bytes = bstr
uuid = #6.37(bstr)

eth-signature = {
    ? request-id: uuid,
    signature: eth-signature-bytes,
    ? signature-origin: text,
}

signature = 2
signature-origin = 3

eth-signature-bytes = bstr

